#!/usr/bin/env python3

import sys, os, re
from subprocess import check_output

# Collect the parameters
commit_msg_filepath = sys.argv[1]
commit_type = ""
commit_hash = ""
if len(sys.argv) > 2:
    commit_type = sys.argv[2]
if len(sys.argv) > 3:
    commit_hash = sys.argv[3]

# Figure out which branch we're on
branch = check_output(['git', 'symbolic-ref', '--short', 'HEAD']).strip().decode('utf-8')

# print("prepare-commit-msg:",
#     f"\n\tFile: {commit_msg_filepath}",
#     f"\n\tType: {commit_type}",
#     f"\n\tHash: {commit_hash}",
#     f"\n\tBranch: {branch}",
# )

# @todo add logic to check if ticket/hotfix prefix exists, to avoid duplication
# with open(commit_msg_filepath, 'r+') as f:
#     commit_msg = f.read()
#     f.seek(0, 0)

#     issue_number = branch.split('-')[0]
#     msg = ""
#     try:
#         issue_number = int(issue_number)
#         msg = f"#{issue_number}: {commit_msg}"
#     except ValueError:
#         print(f"prepare-commit-msg: Branch '{branch}' does not start with an issue number")
#         msg = f"HOTFIX- {commit_msg}"
#     f.write(msg)
#     exit(0)
